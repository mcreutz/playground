# A reference file for a GitHub Actions workflow

name: my_workflow # name of the workflow, optional
run-name: Deploy to ${{ inputs.deploy_target }} by @${{ github.actor }} # name each run of the workflow, optional

on: # events that trigger the workflow
  push:
    branches: [main]
  pull_request:
    branches: [main]
    events: [opened, synchronize, reopened]

env: # variables that are valid for all jobs, use as $VAR_NAME, or ${{ env.VAR_NAME }}
  VAR_NAME: 12345
  ANOTHER_VAR: another_value

jobs: # jobs run in parallel, use 'needs:' no run in sequence
  some_job:
    name: Some job # optional
    runs-on: self-hosted # only specify, when not using matrix strategy, default is 'ubuntu-latest'
    environment: staging_environment # optional, define environment in repository and enforce environment protection rules
    container: # optional, run the job in a container. Short form: 'container: python:3.11'
      image: python:3.11
      env:
        MY_KEY: some_value
      ports:
        - 80
      volumes:
        - my_docker_volume:/volume_mount
      options: --cpus 1
    strategy: # run the job for multiple configurations
      matrix: # run the job for all possible combinations of parameters
        os: [ubuntu-18.04, macos-11, windows-2022] # 'os' is a built-in variable
        python_version: ["3.8", "3.9", "3.10"] # 'python_version' is a custom variable

    steps:
      - name: Checkout repository # optional
        uses: actions/checkout@v2 # calls an external action, 'actions/...' are actions provided by GitHub itself
      - name: Set up Python ${{ matrix.python_version }} # for variables from a context (eg. matrix), use ${{ context_name.variable_name }} syntax
        if: ${{ <expression> }} # only run a job or step, if the expression ${{ ... }} is true
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python_version }}
          cache: "pip"
    # steps exiting with a non-zero exit code stop the job, unless 'continue-on-error: true' is set for the step
  # jobs are successful, if all steps are successful

  some_other_job:
    runs-on: ubuntu-latest
    needs: [some_job] # this job will run only after 'some_job' was completed successfully

    steps:
      - uses: actions/checkout@v2
      - name: Run a one-line script
        run: echo Hello, world!
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.

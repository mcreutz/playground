// You are given two strings s and t.
// String t is generated by random shuffling string s and then add one more letter at a random position.
// Return the letter that was added to t.

// Example 1:
// Input: s = "abcd", t = "abcde"
// Output: "e"
// Explanation: 'e' is the letter that was added.

// Example 2:
// Input: s = "", t = "y"
// Output: "y"

// Constraints:
//     0 <= s.length <= 1000
//     t.length == s.length + 1
//     s and t consist of lowercase English letters.

package main

import (
	"fmt"
	"sort"
)

func findTheDifference(s string, t string) byte {
	sr := []rune(s)
	tr := []rune(t)
	// sort the runes of each string
	sort.Slice(sr, func(i, j int) bool { return sr[i] < sr[j] })
	sort.Slice(tr, func(i, j int) bool { return tr[i] < tr[j] })
	// loop through the sorted strings
	for i, r := range sr {
		// if the rune of s is not the same as the rune of t
		// return the rune of t
		if r != tr[i] {
			return byte(tr[i])
		}
	}
	// if the loop completes, that means that the last rune of t
	// is the only rune that is not in s
	return byte(tr[len(tr)-1])
}

// test case
func main() {
	fmt.Println(findTheDifference("abcd", "abcde"))
}
